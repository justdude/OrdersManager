<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Elysium.Controls;assembly=Elysium"
                    xmlns:metro="http://schemas.codeplex.com/elysium"
                    xmlns:params="http://schemas.codeplex.com/elysium/params"
                    xmlns:local="clr-namespace:OrdersManager.ModelView"
                    xmlns:mvvvm="clr-namespace:MVVM"
                    xmlns:selector="clr-namespace:OrdersManager.TemplateSelector"
                    xmlns:mv="clr-namespace:OrdersManager.Views">




        <!--Converters-->

        <!--type converter-->

        <!--FreelancerViewModel-->
        <HierarchicalDataTemplate
                                    DataType="{x:Type local:FreelancerViewModel}"
                                    ItemsSource="{Binding Children}">
            <Border CornerRadius="3"
                        Padding="2"
                        BorderThickness="2" 
                        BorderBrush="#FFB03636">
                <StackPanel>
                    <TextBlock Text="{Binding Path=FIO}"/>
                </StackPanel>
            </Border>
        </HierarchicalDataTemplate>

        <!--CostumerViewModel-->
        <HierarchicalDataTemplate
                                    DataType="{x:Type local:CostumerViewModel}"
                                    ItemsSource="{Binding Children}">
            <Border CornerRadius="3"
                        Padding="2"
                        BorderThickness="2" 
                        BorderBrush="#FFB03636">
                <StackPanel>
                    <TextBlock Text="{Binding Path=FIO}"/>
                </StackPanel>
            </Border>
        </HierarchicalDataTemplate>

        <!--ProjectViewModel-->
        <HierarchicalDataTemplate   
                                    DataType="{x:Type local:ProjectViewModel}"
                                    ItemsSource="{Binding Children}">
            <Border CornerRadius="3"
                        Padding="2"
                        BorderThickness="2" 
                        BorderBrush="#FF366DB0">
                <TextBlock Text="{Binding Path=Name}"></TextBlock>
            </Border>
        </HierarchicalDataTemplate>

        <!--TaskViewModel-->
        <HierarchicalDataTemplate   
                                    DataType="{x:Type local:TaskViewModel}"
                                    ItemsSource="{Binding Children}">

            <Border CornerRadius="3"
                        Padding="2"
                        BorderThickness="2" 
                        BorderBrush="#FF366DB0">
                <TextBlock Text="{Binding Path=Name}"></TextBlock>
            </Border>
        </HierarchicalDataTemplate>

        <!--Node-->
        <HierarchicalDataTemplate DataType="{x:Type mvvvm:Node}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Text}"/>
            </StackPanel>
        </HierarchicalDataTemplate>

        <!--Person data-->
        <DataTemplate x:Key="PersonTemplate" DataType="{x:Type local:PersonViewModel}">
            <Grid Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="75*"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="30*"/>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="35*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Профиль" VerticalAlignment="Stretch" HorizontalAlignment="Center" ></TextBlock>

                <Image Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" MinHeight="38" ></Image>
                <Button Grid.Row="2" Content="Select" Height="30"  Width="140" ></Button>

                <TextBlock Grid.Row="3" Text="ФИО:" VerticalAlignment="Stretch" HorizontalAlignment="Left" ></TextBlock>
                <TextBox   Grid.Row="4" VerticalAlignment="Top"  Text="{Binding CareerName}" AcceptsReturn="False"  ></TextBox>
                <TextBox   Grid.Row="6" VerticalAlignment="Top"  Text="{Binding CareerName}" AcceptsReturn="False"  ></TextBox>

                <ContentControl Grid.Row="7" ContentTemplate="{DynamicResource OkCancel}"></ContentControl>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="OkCancel">
            <StackPanel  HorizontalAlignment="Right" 
                                                         VerticalAlignment="Stretch"
                                                         Orientation="Horizontal"
                                                         Margin="0,1,1,1" >
                <Button Content="Ok" Height="30" Width="100" Command="{Binding OkeyClick}" ></Button>
                <TextBlock Width="20"></TextBlock>
                <Button Content="Cancel" Height="30" Width="100" Command="{Binding CancelClick}" ></Button>
            </StackPanel>
        </DataTemplate>

        <!--TaskView data-->
        <DataTemplate x:Key="TaskTemplate" DataType="{x:Type local:TaskViewModel}">
            <Grid Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="75*"/>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="30*"/>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="35*"/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="Профиль" VerticalAlignment="Stretch" HorizontalAlignment="Center" ></TextBlock>

                <TextBlock Grid.Row="5" Text="Контакты:" VerticalAlignment="Stretch" HorizontalAlignment="Left" ></TextBlock>
                <TextBox   Grid.Row="6" VerticalAlignment="Top"  Text="{Binding CareerName}" AcceptsReturn="False"  ></TextBox>

                <ContentControl Grid.Row="7" ContentTemplate="{DynamicResource OkCancel}"></ContentControl>
            </Grid>
        </DataTemplate>

        <!--Grided data template-->
        <DataTemplate x:Key="GridedTemplate" DataType="{x:Type local:ProjectViewModel}">
            <ListView Margin="2" ItemsSource="{Binding TableView}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{x:Null}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Project name" DisplayMemberBinding="{Binding Path=Name}"></GridViewColumn>
                        <GridViewColumn Header="Project Cost" DisplayMemberBinding="{Binding Path=ProjectCost}"></GridViewColumn>
                        <GridViewColumn Header="Project Status" DisplayMemberBinding="{Binding Path=ProjectStatus}"></GridViewColumn>
                        <GridViewColumn Header="Final Date" DisplayMemberBinding="{Binding Path=FinalDate}"></GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </DataTemplate>

        <!--View data types-->
        <selector:TemplateSelector 
            GridedView = "{StaticResource GridedTemplate}"
            ProfileView="{StaticResource PersonTemplate}" 
            x:Key="GridProfileSelector"
        />

        <!--style-->

        <!--TreeViewItem-->
        <Style TargetType="TreeViewItem" >
            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding Path=OrdersRootViewModel.IsSelected, Mode=TwoWay}" />
            <Setter Property="Margin" Value="2"></Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property = "Border.Background" Value="Red"/>

                </Trigger>
            </Style.Triggers>
        </Style>


        <!--MenuItem-->
        <Style x:Key="ContextMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="MenuItem.Header" Value="{Binding Text}"/>
            <Setter Property="MenuItem.ItemsSource" Value="{Binding Children}"/>
            <Setter Property="MenuItem.Command" Value="{Binding Command}" />
            <Style.Triggers>
                <Trigger Property="MenuItem.IsMouseOver" Value="true">
                    <Setter Property = "Foreground" Value="White"/>
                    <Setter Property = "Background" Value="Blue"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <ControlTemplate x:Key="AddControl">
            <Button Command="{Binding AddTabItemClick}"
                                Background="{x:Null}" 
                                BorderBrush="{x:Null}" 
                                Foreground="Black"  >
                <TextBlock >...</TextBlock>
            </Button>
        </ControlTemplate>

        <DataTemplate x:Key="DefaultTemplate">
            <TextBlock>Some text</TextBlock>
        </DataTemplate>

        <DataTemplate x:Key="MyTabHeaderTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock>asdaasd</TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding Header}" Width="80" Height="25" FontWeight="Bold"/>
            </Grid>
        </DataTemplate>



</ResourceDictionary>